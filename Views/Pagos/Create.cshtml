@model HotelReservations.Models.Pago

@{
    ViewData["Title"] = "Registrar Pago";
    var reserva = ViewData["Reserva"] as Reserva;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h2 mb-0">@ViewData["Title"]</h1>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left"></i> Volver a la lista
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" asp-controller="Pagos" method="post" class="needs-validation card shadow-sm" novalidate>
            @Html.AntiForgeryToken()
            <div class="card-body">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                @if (reserva != null)
                {
                    <input type="hidden" asp-for="ReservaId" value="@reserva.ReservaId" />
                }
                else
                {
                    <div class="form-group mb-3">
                        <label asp-for="ReservaId" class="form-label">Reserva <span class="text-danger">*</span></label>
                        <select asp-for="ReservaId" class="form-select" asp-items="@(ViewData["Reservas"] as SelectList)" required onchange="cargarDetallesReserva(this.value)">
                            <option value="">Seleccione una reserva...</option>
                        </select>
                        <span asp-validation-for="ReservaId" class="text-danger"></span>
                    </div>
                }

                <div id="detallesReserva">
                    <!-- Aquí se cargarán los detalles de la reserva via JavaScript -->
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Monto" class="form-label">Monto <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <span class="input-group-text bg-light">COP $</span>
                        <input asp-for="Monto" class="form-control" type="number" min="1" required 
                               data-val="true" data-val-required="El monto es requerido"
                               data-val-range="El monto debe estar entre $1 y $100,000,000"
                               data-val-range-min="1" data-val-range-max="100000000"/>
                    </div>
                    <span asp-validation-for="Monto" class="text-danger"></span>
                    <small class="form-text text-muted">Ingrese el monto en pesos colombianos sin decimales</small>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="MetodoPago" class="form-label">Método de Pago <span class="text-danger">*</span></label>
                    <select asp-for="MetodoPago" class="form-select" required>
                        <option value="">Seleccione un método de pago...</option>
                        <option value="Efectivo">Efectivo</option>
                        <option value="Tarjeta de Crédito">Tarjeta de Crédito</option>
                        <option value="Tarjeta de Débito">Tarjeta de Débito</option>
                        <option value="Transferencia">Transferencia</option>
                    </select>
                    <span asp-validation-for="MetodoPago" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary" id="btnSubmit">
                        <i class="bi bi-check-circle"></i> Registrar Pago
                    </button>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">
                    <i class="bi bi-info-circle"></i> Información
                </h5>
            </div>
            <div class="card-body">
                <h6 class="card-subtitle mb-3">Instrucciones</h6>
                <ul class="list-unstyled">
                    <li class="mb-2">
                        <i class="bi bi-1-circle"></i> Seleccione una reserva pendiente de pago
                    </li>
                    <li class="mb-2">
                        <i class="bi bi-2-circle"></i> Verifique el monto pendiente
                    </li>
                    <li class="mb-2">
                        <i class="bi bi-3-circle"></i> Ingrese el monto a pagar
                    </li>
                    <li class="mb-2">
                        <i class="bi bi-4-circle"></i> Seleccione el método de pago
                    </li>
                </ul>
                <div class="alert alert-warning mb-0">
                    <i class="bi bi-exclamation-triangle"></i> El monto no puede exceder el saldo pendiente.
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.querySelector('form.needs-validation').addEventListener('submit', function(e) {
            e.preventDefault();
            const form = this;

            // Usar la validación de HTML5/Bootstrap
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            const monto = document.getElementById('Monto').value;
            const metodoPago = document.getElementById('MetodoPago').value;

            Swal.fire({
                title: '¿Confirmar pago?',
                html: `
                    <p>Monto: $${parseFloat(monto).toLocaleString('es-CO')}</p>
                    <p>Método: ${metodoPago}</p>
                `,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, registrar pago',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Deshabilitar el botón para evitar doble envío
                    document.getElementById('btnSubmit').disabled = true;
                    // Enviar el formulario
                    form.submit();
                }
            });
        });

        function cargarDetallesReserva(reservaId) {
            if (reservaId) {
                fetch(`/Pagos/GetReservaDetails/${reservaId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Crear el HTML para mostrar los detalles
                        const detallesHtml = `
                            <div class="card shadow-sm mb-4">
                                <div class="card-header bg-info text-white">
                                    <h5 class="mb-0">
                                        <i class="bi bi-info-circle"></i> Detalles de la Reserva
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <p class="mb-1"><strong>Cliente:</strong></p>
                                            <p class="mb-3">${data.clienteNombre}</p>
                                            <p class="mb-1"><strong>Habitación:</strong></p>
                                            <p>${data.habitacionTipo}</p>
                                        </div>
                                        <div class="col-md-6 text-end">
                                            <p class="mb-1"><strong>Precio Habitación:</strong></p>
                                            <p class="mb-3">${data.precioHabitacion}</p>
                                            ${data.serviciosAdicionales.length > 0 ? 
                                                `<p class="mb-1"><strong>Total Servicios:</strong></p>
                                                <p>${data.totalServicios}</p>` : ''}
                                        </div>
                                    </div>

                                    ${data.serviciosAdicionales.length > 0 ? `
                                        <div class="mb-3">
                                            <h6>Servicios Adicionales:</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <tbody>
                                                        ${data.serviciosAdicionales.map(s => `
                                                            <tr>
                                                                <td>${s.nombre}</td>
                                                                <td class="text-end">${s.precio}</td>
                                                            </tr>
                                                        `).join('')}
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    ` : ''}

                                    <div class="row">
                                        <div class="col-12">
                                            <div class="alert alert-secondary mb-3">
                                                <div class="row">
                                                    <div class="col-6">
                                                        <p class="mb-1"><strong>Total Reserva:</strong></p>
                                                        <h5>${data.totalReserva}</h5>
                                                    </div>
                                                    <div class="col-6 text-end">
                                                        <p class="mb-1"><strong>Pagos Previos:</strong></p>
                                                        <h5>${data.pagosPrevios}</h5>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="alert alert-primary mb-0">
                                                <p class="mb-1"><strong>Monto Pendiente:</strong></p>
                                                <h3 class="mb-0">${data.montoPendiente}</h3>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>`;

                        // Mostrar los detalles en la página
                        document.getElementById('detallesReserva').innerHTML = detallesHtml;

                        // Establecer el monto pendiente como valor por defecto
                        document.getElementById('Monto').value = data.montoPendienteValor;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error', 'No se pudieron cargar los detalles de la reserva', 'error');
                    });
            } else {
                document.getElementById('detallesReserva').innerHTML = '';
                document.getElementById('Monto').value = '';
            }
        }

        // Si se pasa una reserva, cargar sus detalles al iniciar la página
        document.addEventListener('DOMContentLoaded', function() {
            const reservaId = '@(reserva?.ReservaId ?? 0)';
            if (reservaId && reservaId !== '0') {
                cargarDetallesReserva(reservaId);
            }
        });
    </script>
}